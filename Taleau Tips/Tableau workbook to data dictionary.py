#tableau workbook metadata extraction script

# pip install tableaudocumentapi # doc: https://tableau.github.io/document-api-python/

import openai
import pandas as pd
from tableaudocumentapi import Workbook
import os
import xml.etree.ElementTree as ET

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà ID ‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå
def replace_ids_with_names(calculation, field_id_to_name):
    """
    ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà Field ID ‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠ Field ‡πÉ‡∏ô‡∏™‡∏ï‡∏£‡∏¥‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ç‡∏≠‡∏á Tableau

    Parameters:
    calculation (str): ‡∏™‡∏ï‡∏£‡∏¥‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ó‡∏µ‡πà‡∏°‡∏µ Field ID
    field_id_to_name (dict): ‡∏î‡∏¥‡∏Å‡∏ä‡∏±‡∏ô‡∏ô‡∏≤‡∏£‡∏µ‡∏ó‡∏µ‡πà‡∏°‡∏µ Field ID ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏µ‡∏¢‡πå‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠ Field ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤

    Returns:
    str: ‡∏™‡∏ï‡∏£‡∏¥‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠ Field ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà Field ID
    """
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏™‡∏ï‡∏£‡∏¥‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if calculation:
        # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏î‡∏¥‡∏°
        print("‚ùå ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏î‡∏¥‡∏°:", calculation)
        # ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà Field ID ‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠ Field
        for field_id, field_name in field_id_to_name.items():
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Field ID ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏ï‡∏£‡∏¥‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if field_id in calculation:
                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ä‡∏∑‡πà‡∏≠ Field ‡∏°‡∏µ‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                replacement = f'[{field_name}]' if not field_name.startswith('[') else field_name
                # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà
                print(f"‚úî ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà {field_id} ‡∏î‡πâ‡∏ß‡∏¢ üëâ {replacement}")
                # ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏™‡∏ï‡∏£‡∏¥‡∏á
                calculation = calculation.replace(field_id, replacement)
        # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà
        print("‚ú® ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà:", calculation)
    return calculation


# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ AI ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏≤‡∏ô‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢ ‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡πà‡∏°‡∏≠‡∏∑‡πà‡∏ô‡πÜ
def get_ai_description(row, api_key, model="gpt-3.5-turbo"): # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á "gpt-3.5-turbo" ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤ ‡πÑ‡∏°‡πà‡πÅ‡∏û‡∏á ‡∏ä‡πâ‡∏≤, "gpt-4 turbo" ‡∏î‡∏µ ‡πÅ‡∏û‡∏á ‡∏ä‡πâ‡∏≤‡∏°‡∏≤‡∏Å‡πÜ‡πÜ
    """
    ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏à‡∏≤‡∏Å AI ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÉ‡∏ô Tableau ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ OpenAI

    Parameters:
    row (pd.Series): ‡πÅ‡∏ñ‡∏ß‡πÉ‡∏ô DataFrame ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ü‡∏¥‡∏•‡∏î‡πå
    api_key (str): API key ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö OpenAI
    model (str): ‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏°‡πÄ‡∏î‡∏• AI ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ (‡πÄ‡∏ä‡πà‡∏ô "gpt-3.5-turbo")

    Returns:
    str: ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢ AI
    """
    try:
        openai.api_key = api_key
        #prompt = f"Please provide a brief description and confidence level  for the following Tableau field:\n- Field Name: {row['Field Name']}\n- Field Type: {row['Field Type']}\n- Field Role: {row['Field Role']}\n- Field Calculation: {row['Field Calculation']}\n\nDescription:"
        #prompt = f"Please provide a brief description and confidence level  for the following Tableau field:\n- Field Name: {row['Field Name']}\n- Field Type: {row['Field Type']}\n- Field Role: {row['Field Role']}\n- Field Calculation: {row['Field Calculation Updated']}\n- Field Description: {row['Field Description']}\n- Default Aggregation: {row['Default Aggregation']}\n- Is Quantitative: {row['Is Quantitative']}\n- Is Ordinal: {row['Is Ordinal']}\n- Is Nominal: {row['Is Nominal']}\n\nDescription:"
        prompt = f"Please provide a concise Thai description and confidence level for the following Tableau field:\n- Field Name: {row['Field Name']}\n- Field Type: {row['Field Type']}\n- Field Role: {row['Field Role']}\n- Field Calculation: {row['Field Calculation Updated']}\n- Field Description: {row['Field Description']}\n- Default Aggregation: {row['Default Aggregation']}\n- Is Quantitative: {row['Is Quantitative']}\n- Is Ordinal: {row['Is Ordinal']}\n- Is Nominal: {row['Is Nominal']}\n\nDescription:"
        response = openai.ChatCompletion.create(
            model=model,
            messages=[
                {"role": "system", "content": "You are a helpful assistant."},
                {"role": "user", "content": prompt}
            ]
        )
        return response['choices'][0]['message']['content'].strip()
    except Exception as e:
        return f"Error generating description: {e}"    



def export_enhanced_tableau_data_dictionary(tableau_workbook_path, api_key=None, model="gpt-3.5-turbo", include_ai_description=False):
    """
    ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å data dictionary ‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á‡∏à‡∏≤‡∏Å Tableau workbook ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÑ‡∏ü‡∏•‡πå CSV ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ AI ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢

    Parameters:
    tableau_workbook_path (str): ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á Tableau workbook
    api_key (str): API key ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö OpenAI (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ AI)
    model (str): ‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏°‡πÄ‡∏î‡∏• AI ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ (‡πÄ‡∏ä‡πà‡∏ô "gpt-3.5-turbo" ‡∏´‡∏£‡∏∑‡∏≠ "gpt-4 turbo")
    include_ai_description (bool): ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏à‡∏≤‡∏Å AI

    Returns:
    tuple: DataFrame ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• data dictionary ‡πÅ‡∏•‡∏∞‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏ü‡∏•‡πå CSV ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å
    """
    # ‡πÇ‡∏´‡∏•‡∏î Workbook ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    workbook = Workbook(tableau_workbook_path)

    # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå CSV ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å
    workbook_base_name = os.path.splitext(os.path.basename(tableau_workbook_path))[0]
    output_csv_file = os.path.join(os.path.dirname(tableau_workbook_path), workbook_base_name + '_EnhancedDataDictionary.csv')

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏¥‡∏™‡∏ï‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞ field
    data = []
    # ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞ datasource ‡πÅ‡∏•‡∏∞ field ‡πÉ‡∏ô workbook
    for datasource in workbook.datasources:
        for field_id, field in datasource.fields.items():
            field_description_xml = getattr(field, 'description', None)
            field_description = ''
            # ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ field_description ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ï‡πà‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢
            if field_description_xml is not None:
                try:
                    root = ET.fromstring(field_description_xml)
                    extracted_text = ''.join(root.itertext())
                    field_description = ' '.join(extracted_text.split())
                except ET.ParseError:
                    field_description = field_description_xml
    
            # ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á field
            field_properties = {
                'Datasource Name': datasource.name,
                'Field Name': field.name,
                'Field ID': field_id,
                'Field Type': field.datatype,
                'Field Role': getattr(field, 'role', ''),
                'Field Calculation': getattr(field, 'calculation', ''),
                'Field Caption': getattr(field, 'caption', ''),
                'Field Description': field_description,
                'Default Aggregation': getattr(field, 'default_aggregation', ''),
                'Is Quantitative': getattr(field, 'is_quantitative', ''),
                'Is Ordinal': getattr(field, 'is_ordinal', ''),
                'Is Nominal': getattr(field, 'is_nominal', '')
            }
            data.append(field_properties)

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á DataFrame ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ
    df = pd.DataFrame(data)
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏î‡∏¥‡∏Å‡∏ä‡∏±‡∏ô‡∏ô‡∏≤‡∏£‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏°‡∏õ Field ID ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡∏∑‡πà‡∏≠ Field
    field_id_to_name = {field['Field ID']: field['Field Name'] for field in data}
    # ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 'Field Calculation' ‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô replace_ids_with_names
    df['Field Calculation Updated'] = df.apply(
        lambda row: replace_ids_with_names(row['Field Calculation'], field_id_to_name), axis=1
    )

    # ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ä‡πâ AI ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢
    if include_ai_description and api_key:
        df['AI Description'] = df.apply(lambda row: get_ai_description(row, api_key, model), axis=1)

    # ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å DataFrame ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå CSV
    df.to_csv(output_csv_file, index=False, encoding='utf-8-sig')
    print(f"‡πÑ‡∏î‡πâ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å data dictionary ‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà {output_csv_file}")

    return df, output_csv_file


# ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
api_key = "your-openai-api-key"  # ‡πÉ‡∏™‡πà API key ‡∏Ç‡∏≠‡∏á OpenAI ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà "your-openai-api-key" ‡∏ã‡∏∑‡πâ‡∏≠ key ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà: https://openai.com/product
model="gpt-3.5-turbo"  # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á "gpt-3.5-turbo" ‡∏ñ‡∏π‡∏Å ‡πÄ‡∏£‡πá‡∏ß(‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏≠‡∏∑‡πà‡∏ô‡πÜ), "gpt-4-0125-preview" ‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤ ‡πÅ‡∏û‡∏á‡∏Å‡∏ß‡πà‡∏≤ 10 ‡πÄ‡∏ó‡πà‡∏≤ ‡∏ä‡πâ‡∏≤‡∏°‡∏≤‡∏Å

df_sample, output_csv_path = export_enhanced_tableau_data_dictionary(
    r'C:\Path\to\your\workbook.twb', # ‡∏ä‡∏µ‡πâ path ‡πÑ‡∏õ‡∏ó‡∏µ‡πà tableau workbook ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
    api_key=api_key,
    model=model,
    include_ai_description=True # ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏¥‡∏î AI ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ True ‡∏´‡∏£‡∏∑‡∏≠ False
)

