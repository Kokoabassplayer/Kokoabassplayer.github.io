#tableau workbook metadata extraction script

# pip install tableaudocumentapi # doc: https://tableau.github.io/document-api-python/

from tableaudocumentapi import Workbook
import pandas as pd
import os
import re

def replace_ids_with_names(calculation, field_id_to_name):
    """
    ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà Field ID ‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠ Field ‡πÉ‡∏ô‡∏™‡∏ï‡∏£‡∏¥‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ç‡∏≠‡∏á Tableau

    Parameters:
    calculation (str): ‡∏™‡∏ï‡∏£‡∏¥‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ó‡∏µ‡πà‡∏°‡∏µ Field ID
    field_id_to_name (dict): ‡∏î‡∏¥‡∏Å‡∏ä‡∏±‡∏ô‡∏ô‡∏≤‡∏£‡∏µ‡∏ó‡∏µ‡πà‡∏°‡∏µ Field ID ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏µ‡∏¢‡πå‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠ Field ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤

    Returns:
    str: ‡∏™‡∏ï‡∏£‡∏¥‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠ Field ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà Field ID
    """
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏™‡∏ï‡∏£‡∏¥‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if calculation:
        # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏î‡∏¥‡∏°
        print("‚ùå ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏î‡∏¥‡∏°:", calculation)
        # ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà Field ID ‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠ Field
        for field_id, field_name in field_id_to_name.items():
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Field ID ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏ï‡∏£‡∏¥‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if field_id in calculation:
                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ä‡∏∑‡πà‡∏≠ Field ‡∏°‡∏µ‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                replacement = f'[{field_name}]' if not field_name.startswith('[') else field_name
                # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà
                print(f"‚úî ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà {field_id} ‡∏î‡πâ‡∏ß‡∏¢ üëâ {replacement}")
                # ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏™‡∏ï‡∏£‡∏¥‡∏á
                calculation = calculation.replace(field_id, replacement)
        # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà
        print("‚ú® ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà:", calculation)
    return calculation

def export_enhanced_tableau_data_dictionary(tableau_workbook_path):
    """
    ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å data dictionary ‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á‡∏à‡∏≤‡∏Å Tableau workbook ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÑ‡∏ü‡∏•‡πå CSV

    Parameters:
    tableau_workbook_path (str): ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á Tableau workbook

    Returns:
    tuple: ‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢ DataFrame ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• data dictionary ‡πÅ‡∏•‡∏∞‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏ü‡∏•‡πå CSV ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å
    """
    # ‡πÇ‡∏´‡∏•‡∏î Workbook ‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏
    workbook = Workbook(tableau_workbook_path)
    # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå CSV ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å
    workbook_base_name = os.path.splitext(os.path.basename(tableau_workbook_path))[0]
    output_csv_file = os.path.join(os.path.dirname(tableau_workbook_path), workbook_base_name + '_EnhancedDataDictionary.csv')

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏¥‡∏™‡∏ï‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞ field
    data = []
    # ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞ datasource ‡πÅ‡∏•‡∏∞ field ‡πÉ‡∏ô workbook
    for datasource in workbook.datasources:
        for field_id, field in datasource.fields.items():
            # ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á field
            field_properties = {
                'Datasource Name': datasource.name,
                'Field Name': field.name,
                'Field ID': field_id,
                'Field Type': field.datatype,
                'Field Role': getattr(field, 'role', ''),
                'Field Calculation': getattr(field, 'calculation', ''),
                'Field Caption': getattr(field, 'caption', ''),
                'Field Description': getattr(field, 'description', ''),
                'Default Aggregation': getattr(field, 'default_aggregation', ''),
                'Is Quantitative': getattr(field, 'is_quantitative', ''),
                'Is Ordinal': getattr(field, 'is_ordinal', ''),
                'Is Nominal': getattr(field, 'is_nominal', '')
            }
            data.append(field_properties)

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á DataFrame ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ
    df = pd.DataFrame(data)
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏î‡∏¥‡∏Å‡∏ä‡∏±‡∏ô‡∏ô‡∏≤‡∏£‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏°‡∏õ Field ID ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡∏∑‡πà‡∏≠ Field
    field_id_to_name = {field['Field ID']: field['Field Name'] for field in data}
    # ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 'Field Calculation' ‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô replace_ids_with_names
    df['Field Calculation Updated'] = df.apply(
        lambda row: replace_ids_with_names(row['Field Calculation'], field_id_to_name), axis=1
    )

    # ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å DataFrame ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå CSV
    df.to_csv(output_csv_file, index=False, encoding='utf-8-sig')
    print(f"‡πÑ‡∏î‡πâ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å data dictionary ‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà {output_csv_file}")

    return df, output_csv_file

# ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
df_sample, output_csv_path = export_enhanced_tableau_data_dictionary(r'C:\Path\To\Your\Workbook.twbx')
